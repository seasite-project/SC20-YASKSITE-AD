ivp_dependent: false
datastructs:
  - double Y[s][n]
  - double A[s][s]
  - double h
  - double F[s][n]
  - double y[n]
computations:
  A: "Y[l][j] += A[l][i] * F[i][j]"
  B: "Y[l][j] = Y[l][j] * h + y[j]"
variants:
  - name : LC_ijl
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START i s
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START l s unroll 0
      %COMP A
      %LOOP_END l
      %LOOP_END j
      %LOOP_END i
      %PMODEL
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START l s unroll 1
      %COMP B
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - name : 1
        iterations : "s*n"
        working sets: { "2*s*n+s*s", "(s+1)*n+s*c" }
      - name : 2
        iterations : "n"
        working sets: { "(s+1)*n" } 
  - name : LC_ilj
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START i s
      %PRAGMA nounroll_and_jam
      %LOOP_START l s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP A
      %LOOP_END j
      %LOOP_END l
      %LOOP_END i
      %PMODEL
      %LOOP_START l s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP B
      %LOOP_END j
      %LOOP_END l
    pmodel :
      - name : 1
        iterations : "s*s*n"
        working sets: { "2*s*n+s*s", "(s+1)*n+s*c", "2*n" }
      - name : 2
        iterations : "s*n"
        working sets: { "(s+1)*n", "2*n" }
  - name : LC_jil
    code: |
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START i s unroll 1
      %LOOP_START l s unroll 0
      %COMP A
      %LOOP_END l
      %LOOP_END i
      %LOOP_START l s unroll 2
      %COMP B
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - iterations : "n"
        working sets: { "(2*s+1)*n+s*s" }
  - name : LC_jli
    code: |
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START l s unroll 1
      %LOOP_START i s unroll 0
      %COMP A
      %LOOP_END i
      %COMP B
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - iterations : "n"
        working sets: { "(2*s+1)*n+s*s" }
  - name : LC_lij
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START l s
      %PRAGMA nounroll_and_jam
      %LOOP_START i s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP A
      %LOOP_END j
      %LOOP_END i
      %PMODEL
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP B
      %LOOP_END j
      %LOOP_END l
    pmodel :
      - name : 1
        iterations : "s*s*n"
        working sets: { "(2*s+1)*n+s*s", "(s+1)*n+s", "2*n" }
      - name : 2
        iterations : "s*n"
        working sets: { "(s+1)*n", "2*n" }
  - name : LC_lji
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START l s
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START i s unroll
      %COMP A
      %LOOP_END i
      %COMP B
      %LOOP_END j
      %LOOP_END l
    pmodel :
      - iterations : "s*n"
        working sets: { "(2*s+1)*n+s*s", "(s+2)*n+s" }
codegen:
  loop splits:
    - i 0
model_tool: kerncraft
